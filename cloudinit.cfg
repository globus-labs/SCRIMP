#cloud-config

apt_update: true
packages:
#Condor
 - libssl0.9.8
 - libvirt0
 - libdate-manip-perl
# LVM
 - lvm2
#NFS
 - autofs
#Galaxy
 - gnuplot
 - liblist-moreutils-perl
 - libemail-valid-perl
 - libwww-mechanize-perl
 - libtie-ixhash-perl
 - libdbi-perl
 - libdbd-sqlite3-perl
 - openjdk-6-jre
 - python-markupsafe
 - python-numpy
 - python-psycopg2
 - r-base
 - ruby1.9.1
 - samtools
 - unzip
 - zip
#Useful tools
 - mc

runcmd:

# add SSH key for galaxy user as the first step, in order to faciliate
# debugging
 - echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD0XYj17k60cKaltETBx9EDm4e1HE9Sk7TH6gLs7qmzcQIAI+NG08ZW4zK9p2/4F5ydzAN+evXEBknc59SxEotT7iddhnZpFoCH2Spp33H6fJJBNTOtIEIHP6Va7B+C7PJf7W+x2EFwkf4bE8J8FUYMFxfOfdbRV1JO+ZvWDEcj7arAiI55wYd7pkPqx9tS2PFwJUrYRjhFIZJrS4VakARgIWeG5hFC6aK27s6gGwBQp98w2sgqp79hXpRDnfy91ijzirXFv081leHelgrCwLtcN4Y+z/gZEQ6nOxxsFWe+BFUMAMo0HNBGSSuB2uLQBzqYbgbCivXt4z8uEdZZlXkH galaxy@dev.globusgenomics.org' >> /home/ubuntu/.ssh/authorized_keys
 - echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDiHTR3gi1ckIzMOeZ4Rq9ymg+XdXZHoCHVVJPDUIMoMGW86Ag6q9M8GdqTLAiMQHqIc6uGt5FXpt4ov7yGgJ19poXNrGYfCbA1FH+5XHZbE6vQX9BHVEvsGf9GJPLbHRiknRUBS2nZ66dfIambY4DgWuhwPCRrM3zYjn7EqKiC2ifleIbJ3hobXxGPLk+BiQdb74zCaSIJmThTicZP1hicC1mpFx3A7w+o2gjpOUOcU1yqCQVu0YuZS25xvU9mR5Jkwx3EOc07gfI0VTBixOM5R4nHFImojUr714jZXrVONeQGYIHWJr9vO3d51uzrXFA5W3WvmR73I9cpS6nI6RP9 galaxy@ryan.globusgenomics.org' >> /home/ubuntu/.ssh/authorized_keys 
# setup hostname info
 - echo '$ip_addr $domain headnode' >> /etc/hosts
 - echo "$$(ec2metadata --local-ip) $$(ec2metadata --local-hostname)" >> /etc/hosts
 - echo "$$(ec2metadata --local-hostname)" > /etc/hostname
 - [ hostname, -F, /etc/hostname ]

# setup ephemeral filesystem...
# ...using merged ephemeral volumes
 - [ mkdir, -p, /ephemeral/0 ]
 - [ umount, /mnt ]
 - [ pvcreate, /dev/xvdb ]
 - [ pvcreate, /dev/xvdc ]
 - [ pvcreate, /dev/xvdd ]
 - [ pvcreate, /dev/xvde ]
 - [ vgcreate, ephemeral, /dev/xvdb ]
 - [ vgextend, ephemeral, /dev/xvdc ]
 - [ vgextend, ephemeral, /dev/xvdd ]
 - [ vgextend, ephemeral, /dev/xvde ]
 - [ lvcreate, -l, 100%VG, -i, 1, -I, 64, ephemeral, -n, ephemeral ]
 - [ mke2fs, /dev/ephemeral/ephemeral ]
 - [ mount, /dev/ephemeral/ephemeral, /ephemeral/0 ]

# move /tmp to ephemeral FS
 - [ cp, -pr, /tmp, /ephemeral/0 ]
 - [ rm, -rf, /tmp ]
 - [ ln, -s, /ephemeral/0/tmp, /tmp ]


# Configure NFS and mount remote filesystems
 - [ mkdir, -p, /home/galaxy ]
 - [ mkdir, -p, /opt/galaxy ]
 - [ mkdir, -p, /mnt/galaxyTools ]
 - [ mkdir, -p, /mnt/galaxyIndices ]
 - [ mkdir, -p, /scratch ]
 - echo 'NEED_STATD=no' > /etc/default/nfs-common
 - echo 'NEED_IDMAPD=yes' >> /etc/default/nfs-common
 - echo '/- /etc/auto.nfs' >> /etc/auto.master
 - echo '/home/galaxy -fstype=nfs4 $ip_addr:/home/galaxy' >> /etc/auto.nfs
 - echo '/opt/galaxy -fstype=nfs4 $ip_addr:/opt/galaxy' >> /etc/auto.nfs
 - echo '/mnt/galaxyTools -fstype=nfs4 $ip_addr:/mnt/galaxyTools' >> /etc/auto.nfs
 - echo '/mnt/galaxyIndices -fstype=nfs4 $ip_addr:/mnt/galaxyIndices' >> /etc/auto.nfs
 - echo '/scratch -fstype=nfs4 $ip_addr:/scratch' >> /etc/auto.nfs
 - echo '[General]' > /etc/idmapd.conf
 - echo 'Verbosity = 0' >> /etc/idmapd.conf
 - echo 'Pipefs-Directory = /run/rpc_pipefs' >> /etc/idmapd.conf
 - echo 'Domain = globusgenomics.org' >> /etc/idmapd.conf
 - echo '[Mapping]' >> /etc/idmapd.conf
 - echo 'Nobody-User = nobody' >> /etc/idmapd.conf
 - echo 'Nobody-Group = nogroup' >> /etc/idmapd.conf
 - [ service, idmapd, restart ]
 - [ service, autofs, restart ]

# Increase both hard and soft on open files
 - echo '* - nofile 65000' >> /etc/security/limits.conf

# Add the galaxy user used to run all jobs
 - [ addgroup, --gid, 4000, galaxy ]
 - [ adduser, --uid, 4000, --ingroup, galaxy, --disabled-password, --gecos, '', galaxy ]
# Install Condor
 - [ wget, 'http://repo.globusgenomics.org/packages/condor_8.2.6-288241_amd64.deb' ]
 - [ dpkg, -i, 'condor_8.2.6-288241_amd64.deb' ]
# Configure Condor
 - [ mkdir, -p, /ephemeral/0/condor ]
 - [ chown, 'condor:condor', /ephemeral/0/condor ]
 - echo 'CONDOR_HOST = $ip_addr' > /etc/condor/condor_config.local
 - echo 'COLLECTOR_NAME = Globus Genomics Condor Pool' >> /etc/condor/condor_config.local
# - echo 'START = GlobusOnline =?= UNDEFINED' >> /etc/condor/condor_config.local
#Just playing trying to make it claim instances faster. I think I fixed this setting the neg interval on the tenant.
 - echo 'START = TRUE' >> /etc/condor/condor_config.local
 - echo 'NEGOTIATOR_INTERVAL = 20' >> /etc/condor/condor_config.local
 - echo 'NEGOTIATOR_UPDATE_AFTER_CYCLE = TRUE' >> /etc/condor/condor_config.local
#Finished playing
 - echo 'UPDATE_INTERVAL = 30' >> /etc/condor/condor_config.local
 - echo 'SUSPEND = FALSE' >> /etc/condor/condor_config.local
 - echo 'PREEMPT = FALSE' >> /etc/condor/condor_config.local
 - echo 'CLAIM_WORKLIFE = -1' >> /etc/condor/condor_config.local
 - echo 'MAX_CLAIM_ALIVES_MISSED = 3000' >> /etc/condor/condor_config.local
 - echo 'KILL = FALSE' >> /etc/condor/condor_config.local
 - echo 'DAEMON_LIST = MASTER, STARTD' >> /etc/condor/condor_config.local
 - echo 'ALLOW_READ = *' >> /etc/condor/condor_config.local
 - echo 'ALLOW_WRITE = *' >> /etc/condor/condor_config.local
 - echo 'EXECUTE = /ephemeral/0/condor' >> /etc/condor/condor_config.local
 - echo 'SLOT_TYPE_1 = cpus=$cpus' >> /etc/condor/condor_config.local
 - echo 'NUM_SLOTS_TYPE_1 = 1' >> /etc/condor/condor_config.local
# - echo 'SLOT_TYPE_1_PARTITIONABLE = true' >> /etc/condor/condor_config.local
 - echo 'SLOT_TYPE_1_PARTITIONABLE = false' >> /etc/condor/condor_config.local
 - echo 'FILESYSTEM_DOMAIN = globusgenomics.org' >> /etc/condor/condor_config.local
 - echo 'UID_DOMAIN = globusgenomics.org' >> /etc/condor/condor_config.local
 - echo 'TRUST_UID_DOMAIN = True' >> /etc/condor/condor_config.local
 - echo "NETWORK_INTERFACE = $$(ec2metadata --local-ip)" >> /etc/condor/condor_config.local
 - echo 'ulimit -n 65000' > /tmp/restart_condor.sh
 - echo 'service condor restart' >> /tmp/restart_condor.sh
 - [ bash, /tmp/restart_condor.sh ]

# Configure self-termination
 - echo '#!/bin/bash' > /usr/local/bin/monitor_instance.sh
 - echo 'running_secs="$$(cat /proc/uptime | cut -d'.' -f1)"' >> /usr/local/bin/monitor_instance.sh
# - echo 'let minutes_left=60-running_secs/60' >> /usr/local/bin/monitor_instance.sh
 - echo 'let minutes_left=60-$$((running_secs % 3600))/60' >> /usr/local/bin/monitor_instance.sh
 - echo 'if [[ $$minutes_left -gt 2 ]]; then' >> /usr/local/bin/monitor_instance.sh
 - echo '    exit 0' >> /usr/local/bin/monitor_instance.sh
 - echo 'fi' >> /usr/local/bin/monitor_instance.sh
 - echo 'daemonname="$$(ec2metadata --local-hostname)"' >> /usr/local/bin/monitor_instance.sh
 - echo 'claimed=`condor_status -direct $$daemonname`' >> /usr/local/bin/monitor_instance.sh
 - echo 'if echo "$$claimed" | grep 'Idle'; then' >> /usr/local/bin/monitor_instance.sh
 - echo '    /sbin/shutdown -h now' >> /usr/local/bin/monitor_instance.sh
 - echo 'fi' >> /usr/local/bin/monitor_instance.sh
 - [ chmod, 755, /usr/local/bin/monitor_instance.sh ]
 - echo '* * * * * root /usr/local/bin/monitor_instance.sh' > /etc/cron.d/monitor_instance
